# Vim keys
set editing-mode vi
set keymap vi

$if mode=vi
    set keymap vi-command
    # Don't search history with j/k
    "j": nop
    "k": nop
    # Don't search history with <Ctrl-s>
    Control-s: nop
    # Don't open $EDITOR on rlwrap command line with <Ctrl-^>
    Control-^: nop
    # Open $EDITOR on rlwrap command line with <Ctrl-x><Ctrl-e>
    "\C-x\C-e": rlwrap-call-editor
    "daw": "lbdW"
    "yaw": "lbyW"
    "caw": "lbcW"
    "diw": "lbdw"
    "yiw": "lbyw"
    "ciw": "lbcw"
    "da\"": "lF\"df\""
    "di\"": "lF\"lmtf\"d`t"
    "ci\"": "di\"i"
    "ca\"": "da\"i"
    "da'": "lF'df'"
    "di'": "lF'lmtf'd`t"
    "ci'": "di'i"
    "ca'": "da'i"
    "da`": "lF\`df\`"
    "di`": "lF\`lmtf\`d`t"
    "ci`": "di`i"
    "ca`": "da`i"
    "da(": "lF(df)"
    "di(": "lF(lmtf)d`t"
    "ci(": "di(i"
    "ca(": "da(i"
    "da)": "lF(df)"
    "di)": "lF(lmtf)d`t"
    "ci)": "di(i"
    "ca)": "da(i"
    "da{": "lF{df}"
    "di{": "lF{lmtf}d`t"
    "ci{": "di{i"
    "ca{": "da{i"
    "da}": "lF{df}"
    "di}": "lF{lmtf}d`t"
    "ci}": "di}i"
    "ca}": "da}i"
    "da[": "lF[df]"
    "di[": "lF[lmtf]d`t"
    "ci[": "di[i"
    "ca[": "da[i"
    "da]": "lF[df]"
    "di]": "lF[lmtf]d`t"
    "ci]": "di]i"
    "ca]": "da]i"
    "da<": "lF<df>"
    "di<": "lF<lmtf>d`t"
    "ci<": "di<i"
    "ca<": "da<i"
    "da>": "lF<df>"
    "di>": "lF<lmtf>d`t"
    "ci>": "di>i"
    "ca>": "da>i"
    "da/": "lF/df/"
    "di/": "lF/lmtf/d`t"
    "ci/": "di/i"
    "ca/": "da/i"
    "da:": "lF:df:"
    "di:": "lF:lmtf:d`t"
    "ci:": "di:i"
    "ca:": "da:i"
    ?: reverse-search-history
    /: forward-search-history
    set keymap vi-insert
    # Press 'jk' to ESC insert mode
    "jk": vi-movement-mode
    # Don't search history with <Ctrl-s>
    Control-s: nop
    # Don't open $EDITOR on rlwrap command line with <Ctrl-^>
    Control-^: nop
    # Open $EDITOR on rlwrap command line with <Ctrl-x><Ctrl-e>
    "\C-x\C-e": rlwrap-call-editor
$endif

# Don't bind control chars w/ special kernel treatment to readline equiv
set bind-tty-special-chars off

# Make <Ctrl-n> and <Ctrl-p> cycle through completions
Control-n: menu-complete
Control-p: menu-complete-backward

# Add a trailing slash when autocompleting symlinks to directories
set mark-symlinked-directories on

# Use the text that has already been typed as the prefix for searching
# through commands (i.e. more intelligent Up/Down behavior)
"\e[A": history-search-backward
"\eOA": history-search-backward
"\e[B": history-search-forward
"\eOB": history-search-forward

# Do not autocomplete hidden files unless the pattern explicitly begins
# with a dot
set match-hidden-files off

# Show all autocomplete results at once
set page-completions off

# If there are more than 200 possible completions for a word, ask to
# show them all
set completion-query-items 200

# Show extra file information when completing, like `ls -F` does
set visible-stats on
set colored-stats on
set colored-completion-prefix on

# Disable beep
set bell-style none

# Be more intelligent when autocompleting by also looking at the text
# after the cursor. For example, when the current line is "cd
# ~/src/mozil", and the cursor is on the "z", pressing Tab will not
# autocomplete it to "cd ~/src/mozillail", but to "cd ~/src/mozilla".
# (This is supported by the Readline used by Bash 4.)
set skip-completed-text on

# Allow UTF-8 input and output, instead of showing stuff like
# $'\0123\0456'
set meta-flag on
set input-meta on
set convert-meta off
set output-meta on

# https://cirw.in/blog/bracketed-paste
set enable-bracketed-paste off
