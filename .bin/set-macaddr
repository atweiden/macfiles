#!/usr/bin/env bash

# ----------------------------------------------------------------------------
# set-macaddr: set MAC address on interface
# ----------------------------------------------------------------------------

_usage() {
read -r -d '' _usage_string <<'EOF'
Usage:
  set-macaddr [-h|--help] <interface> <macaddr>
  set-macaddr en0 d4:9a:20:11:44:26

Options:
  -h, --help  Show this help text
EOF
echo "$_usage_string"
}

_POSITIONAL=()

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      _usage
      exit 0
      ;;
    *)
      _POSITIONAL+=("$1")
      shift
      ;;
  esac
done

_interface="${_POSITIONAL[0]}"
_macaddr="${_POSITIONAL[1]}"

# restore positional params
set -- "${_POSITIONAL[@]}"

if ! [[ -n "$_macaddr" && -n "$_interface" ]]; then
  _usage
  exit 1
fi

airport='/System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport'

main() {
  if ! [[ "$UID" == '0' ]]; then
    echo 'Sorry, requires root privileges'
    exit 1
  fi
  # turn on the device, assuming it's an airport device
  networksetup -setairportpower "$1" on 2>/dev/null || true
  # disassociate from wifi networks, needed even when changing non-airport dev
  "$airport" --disassociate
  ifconfig "$1" ether "$2"
  networksetup -detectnewhardware
  networksetup -setairportpower "$1" off 2>/dev/null || true
  networksetup -setairportpower "$1" on 2>/dev/null || true
}

main "$_interface" "$_macaddr"
