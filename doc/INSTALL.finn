/* vim: set filetype=finn foldmethod=marker foldlevel=0 nowrap: */

Installation
============

install xcode command line tools [1]
------------------------------------

```bash
sudo rm -rf /Library/Developer/CommandLineTools
xcode-select --install
xcodebuild -license
```

install homebrew
----------------

```bash
/bin/bash -c "$(curl -fsSL https://github.com/Homebrew/install/raw/master/install.sh)"
brew analytics off
```

install homebrew core packages
------------------------------

```bash
packages=('ack'
          'aria2'
          'bash'
          'bash-completion@2'
          'bat'
          'binutils'
          'ccrypt'
          'colordiff'
          'coreutils'
          'curl'
          'darkhttpd'
          'diffr'
          'diffutils'
          'dnscrypt-proxy'
          'exiftool'
          'ffmpeg'
          'findutils'
          'gawk'
          'git'
          'gnu-getopt'
          'gnu-sed'
          'gnu-tar'
          'gnu-time'
          'gnu-units'
          'gnu-which'
          'gnupg'
          'gnutls'
          'grep'
          'gzip'
          'icdiff'
          'jq'
          'macvim'
          'make'
          'mas'
          'mercurial'
          'moreutils'
          'mosh'
          'mr'
          'ncdu'
          'neovim'
          'oath-toolkit'
          'openssh'
          'openssl'
          'openvpn'
          'p7zip'
          'proxychains-ng'
          'qrencode'
          'rclone'
          'readline'
          'remarshal'
          'ripgrep'
          'rlwrap'
          'rsync'
          'shellcheck'
          'signify-osx'
          'so'
          'socat'
          'sshuttle'
          'ssss'
          'tealdeer'
          'the_silver_searcher'
          'tmux'
          'tor'
          'torsocks'
          'tree'
          'wget'
          'wireguard-tools'
          'xz'
          'youtube-dl')

brew install "${packages[@]}"
```

configure shell
---------------

```bash
if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
  echo '/usr/local/bin/bash' | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/bash
fi
```

configure macos: general settings
---------------------------------

```bash
./macos.sh
```

configure macos: security settings [2][3][4]
--------------------------------------------

```bash
git clone https://github.com/kristovatlas/osx-config-check
cd osx-config-check
python app.py
```

install homebrew cask packages
------------------------------

```bash
# chat
casks+=('adium'
        'coyim'
        'ricochet')

# design
casks+=('abstract'
        'sketch'
        'zeplin')

# display
casks+=('keepingyouawake')

# email
casks+=('canary')

# ftp clients
casks+=('cyberduck')

# keyboard
casks+=('karabiner-elements')

# media player
casks+=('iina'
        'vlc')

# office
casks+=('calibre')

# os image flasher
casks+=('balenaetcher'
        'unetbootin')

# password management
casks+=('keepassx')

# screencasting
casks+=('ishowu-instant'
        'kap'
        'keycastr')

# security
casks+=('little-snitch'
        'micro-snitch'
        'veracrypt')

# storage
casks+=('dropbox')

# system
casks+=('osxfuse')

# terminal emulators
casks+=('iterm2')

# text editors
casks+=('sublime-text'
        'textmate')

# virtualization
casks+=('virtualbox'
        'virtualbox-extension-pack'
        'vmware-fusion')

# web browsers
casks+=('firefox'
        'google-chrome'
        'tor-browser')

brew tap caskroom/cask
brew cask install "${casks[@]}"
```

configure security software
---------------------------

### dnscrypt-proxy

```bash
vim /usr/local/etc/dnscrypt-proxy.toml
sudo brew services start dnscrypt-proxy
```

- System Preferences -> Network -> Advanced
  - DNS
    - set DNS Servers to 127.0.0.1

### little snitch

```bash
open /usr/local/Caskroom/little-snitch/4.5.2/LittleSnitch-4.5.2.dmg
```

configure desktop
-----------------

### audio

- System Preferences -> Sound
  - Show volume in menu bar

### iterm2

- setup iterm2 seoul256 colorscheme [5]
- setup iterm2 alt keybindings [6]
  - | Q: How do I make the option/alt key act like Meta or send escape
    |    codes?
    |
    | A: Go to Preferences > Profiles tab. Select your profile on the
    |    left, and then open the Keyboard tab. At the bottom is a set
    |    of buttons that lets you select the behavior of the Option
    |    key. For most users, Esc+ will be the best choice.

### keyboard

- remap capslock key to backspace with karabiner-elements
- System Preferences -> Keyboard
  - Keyboard
    - Repeat: fastest
    - Delay: second shortest
  - Shortcuts
    - Launchpad & Dock
      - uncheck all
    - Mission Control
      - uncheck all except "Show Desktop"
      - change "Show Desktop" to Super+D
    - Keyboard
      - uncheck all except "Move focus to next window"
    - Accessibility
      - uncheck all
    - App Shortcuts
      - uncheck all

configure developer environment
-------------------------------

### monaco for powerline

```bash
brew install fondu
brew install fontforge
git clone https://github.com/Lokaltog/powerline
git clone https://gist.github.com/atweiden/3666975d171cc862cc2beb35b94de921 mkmonaco
cp mkmonaco/Makefile powerline/font
make -C powerline/font
```

- open *Font Book*
  - File -> Add Fonts
    - add `Monaco for Powerline.ttf`

### macfiles

```bash
./bootstrap.sh
```

### fzf-extras

```bash
git clone https://github.com/atweiden/fzf-extras "$HOME/.fzf-extras"
```

### universal-ctags

```bash
brew tap universal-ctags/universal-ctags
brew install --HEAD universal-ctags
```

install homebrew custom packages
--------------------------------

```bash
git clone https://github.com/atweiden/homebrew-formulae
pushd homebrew-formulae
brew install enchive/enchive.rb
```

install programming languages
-----------------------------

### c

```bash
brew install gcc
brew install llvm
```

### clojure

```bash
brew tap adoptopenjdk/openjdk
brew cask install adoptopenjdk/openjdk
brew cask install graalvm/tap/graalvm-ce-java11
brew install clojure
brew install leiningen
brew install boot-clj
brew install lumo
# pending resolution of https://clojure.atlassian.net/browse/TDEPS-99
cat > $HOME/.config/maven/settings.xml <<'EOF'
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      https://maven.apache.org/xsd/settings-1.0.0.xsd">
  <localRepository>${env.XDG_CACHE_HOME}/maven/repository</localRepository>
</settings>
EOF
alias mvn='mvn --global-settings $HOME/.config/maven/settings.xml'
unset _JAVA_OPTIONS
_JAVA_OPTIONS+=" -Djava.util.prefs.userRoot=$HOME/.config/java"
_JAVA_OPTIONS+=" -Dorg.apache.maven.user-settings=$HOME/.config/maven/settings.xml"
export _JAVA_OPTIONS
```

### elixir

```bash
brew install elixir
brew install erlang
```

### fennel

```bash
brew install LuaJIT
git clone https://github.com/bakpakin/Fennel
pushd Fennel
make fennel
cp fennel "$HOME/.bin"
popd
```

### go

```bash
brew install go
brew install goreleaser
brew install gotags
```

### javascript

```bash
brew install node
brew install yarn
```

### lisp

```bash
brew install sbcl
curl -O https://beta.quicklisp.org/quicklisp.lisp{,.asc}
sbcl --load quicklisp.lisp
* (quicklisp-quickstart:install)
* (ql:add-to-init-file)
```

### python

```bash
brew install python
brew install python@2
pip install --upgrade pip setuptools
pip3 install --upgrade pip setuptools
```

### raku

```bash
brew install perl
brew install rakudo
pushd "$HOME/.src"
git clone https://github.com/ugexe/zef
pushd zef
raku -I. bin/zef install .
popd
popd
```

### reason

```bash
npm install --global esy
pushd "$HOME/.src"
git clone https://github.com/esy-ocaml/hello-reason
pushd hello-reason
esy
popd
popd
```

### rust

```bash
brew install rust
```


******************************************************************************

[1]: https://developer.apple.com/download/more/
[2]: https://objective-see.com/products.html
[3]: https://github.com/drduh/macOS-Security-and-Privacy-Guide
[4]: https://docs.hardentheworld.org/OS/MacOS_10.12_Sierra/
[5]: https://github.com/atweiden/iterm2-seoul256-night
[6]: https://iterm2.com/faq.html
