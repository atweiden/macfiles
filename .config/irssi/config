servers = (
  #/server add -network freenode -port 6667 irc.freenode.org
  {
    address = "chat.freenode.net";
    chatnet = "freenode";
    port = "6667";
    autoconnect = "yes";
    term_type = "utf-8";
  }
);

chatnets = {
  #/network add -nick yourname -user yourname -realname "yourname" freenode
  freenode = {
    type = "IRC";
    nick = "yourname";
    real_name = "yourname";
    user_name = "yourname";
  };
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";
      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "inactive";

      # list of items in statusbar in the display order
      items = {
        barstart = {
          priority = "100";
        };
        time = {};
        user = {};
        window = {};
        window_empty = {};
        lag = {
          priority = "-1";
        };
        act = {
          priority = "10";
        };
        more = {
          priority = "-1";
          alignment = "right";
        };
        barend = {
          priority = "100";
          alignment = "right";
        };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      disabled = "yes";
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = {
          priority = "100";
        };
        window = {};
        window_empty = {};
        more = {
          priority = "-1";
          alignment = "right";
        };
        barend = {
          priority = "100";
          alignment = "right";
        };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = {
          priority = "-1";
        };
        prompt_empty = {
          priority = "-1";
        };
        # treated specially, this is the real input line.
        input = {
          priority = "10";
        };
      };
    };

    # topicbar
    topic = {
      disabled = 'yes';
      type = "root";
      placement = "top";
      position = "1";
      visible = "inactive";
      items = {
        topicbarstart = {
          priority = "100";
        };
        topic = {};
        topic_empty = {};
        topicbarend = {
          priority = "100";
          alignment = "right";
        };
      };
    };
  };
};

settings = {
  core = {
    real_name = "yourname";
    user_name = "yourname";
    nick = "yourname";
    settings_autosave = "yes";
    timestamp_format = "%H:%M:00";
    server_reconnect_time = "15min";
    recode_fallback = "UTF-8";
    recode_out_default_charset = "UTF-8";
    recode_transliterate = "yes";
    recode = "yes";
    recode_autodetect_utf8 = "yes";
    awaylog_level = "hilight";
    awaylog_file = "~/.config/irssi/logs/away.log";
  };
  "fe-text" = {
    actlist_sort = "refnum";
  };
  "irc/core" = {
    alternate_nick = "yourname_";
    channel_sync = "yes";
    cmds_max_at_once = "0";
    cmd_queue_speed = "0";
    ctcp_version_reply = "?";
    ctcp_userinfo_reply = "?";
    max_ctcp_queue = "0";
    usermode = "+ix";
    skip_motd = "yes";
    ban_type = "host";
    kick_first_on_kickban = "yes";
  };
  "irc/flood" = {
    flood_timecheck = "0";
    flood_max_msgs = "0";
  };
  "fe-common/core" = {
    theme = "themes/miromiro";
    show_names_on_join = "no";
    beep_msg_level = "MSGS HILIGHT";
    term_charset = "UTF-8";
    max_command_history = "25";
    autolog_path = "~/.config/irssi/logs/$tag/$0.log";
    autocreate_query_level = "MSGS";
    activity_hilight_level = "MSGS";
    beep_when_away = "no";
    beep_when_window_active = "no";
    hilight_level = "PUBLIC";
    tls_verbose_connect = "no";
    hilight_nick_matches_everywhere = "yes";
    show_nickmode_empty = "no";
  };
};

logs = {};

hilights = (
  {
    text = "yourname";
    nick = "yes";
    word = "yes";
  }
);

ignores = (
  {
    level = "CTCPS DCC DCCMSGS INVITES";
  }
);

# vim: set filetype=config foldmethod=marker foldlevel=0 nowrap:
